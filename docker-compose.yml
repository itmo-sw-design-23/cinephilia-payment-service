version: "3.9"
services:
#  backend:
#    image: kawwik/payment-service
#    ports:
#      - 8080:80
#    networks:
#      - backend
#    environment:
#      SPRING__DATA__MONGODB__URI: mongodb://mongo:27017/
#      SPRING__KAFKA__BOOTSTRAP-SERVERS: "kafka:29092"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    networks:
      - kafka
      - backend
    environment:
      KAFKA_CREATE_TOPICS: "cinephilia.payments.movie-purchased:1:1"
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    networks:
      - kafka
    ports:
      - "9000:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: true

  mongo:
    build:
      context: mongoDb
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
    networks:
      - backend

  prometheus:
    image: quay.io/prometheus/prometheus:v2.32.0
    volumes:
      - ./prometheus/data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - "9090:9090"
    networks:
      - external_network

  grafana:
    image: grafana/grafana
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=quipy
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    networks:
      - external_network

  jaeger-ui:
    image: jaegertracing/all-in-one:${JAEGER_VERSION:-latest}
    container_name: jaeger-ui
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - QUERY_BASE_PATH=/jaeger-ui
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"

volumes:
  mongo_data: { }
  prom_data:

networks:
  kafka:
  backend:
  external_network: